# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
 
name: Java CI with Maven
env:
  IMAGE_TAG_HASH: ""
  IMAGE_TAGS: ""
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_REGISTRY_USER: ${{ github.actor }}
  IMAGE_REGISTRY_PASSWORD: ${{ github.token }}
  HELM-CHART-PATH : ""

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_call:
    inputs:
      helm-chart-path:
        required: true
        type: string
    secrets:
      token:
        required: false  

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:  write-all
      #contents: read
      #packages: write
      #attestations: write
      #id-token: write

    steps:
    - name: Set environment variables
      run: |
        echo "HELM-CHART-PATH=${{ inputs.helm-chart-path || 'java-github-action-app' }}" >> $GITHUB_ENV 
        
    - uses: actions/checkout@v4.1.7
    - name: Set up JDK 17
      uses: actions/setup-java@v4.2.1
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: maven
    - name: Build with Maven
      run: mvn -DskipTests=true -B package --file pom.xml -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ secrets.MAVEN_LIB_TOKEN }}  
    - name: Log in to the Container registry
      uses: docker/login-action@v3.2.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract GAV
      id: extract
      uses: andreacomo/maven-gav-extractor@v2.0.1
    - name: Log GAV
      run: |
        echo ${{ steps.extract.outputs.group-id }}
        echo ${{ steps.extract.outputs.artifact-id }}
        echo ${{ steps.extract.outputs.version }}
        echo ${{ steps.extract.outputs.name }}
      shell: bash

    - name: Determine image tags hash
      if: env.IMAGE_TAG_HASH == ''
      run: |
        echo "IMAGE_TAG_HASH=${GITHUB_SHA::7}" | tee -a $GITHUB_ENV
        #echo "IMAGE_TAGS: ${{ steps.extract.outputs.version }}-${{ env.IMAGE_TAG_HASH }}"

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}     
        
    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6.2.0
      with:
        context: .
        push: true
        tags: ${{ env.IMAGE_REGISTRY }}/${{  steps.extract.outputs.artifact-id }}:${{ steps.extract.outputs.version }}-${{ env.IMAGE_TAG_HASH }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
            ARTIFACT_ID=${{  steps.extract.outputs.artifact-id }}
            ARTIFACT_VERSION=${{ steps.extract.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.MAVEN_LIB_TOKEN }}        
            
    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1.3.2
      with:
        subject-name: ${{ env.IMAGE_REGISTRY }}/${{ steps.extract.outputs.artifact-id}}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true    
        
    - name: Dependency Review
      uses: actions/dependency-review-action@v4.3.2
      with:
        allow-licenses: MIT, Apache-2.0
        base-ref: ${{ github.event.pull_request.base.sha || 'main' }}
        head-ref: ${{ github.event.pull_request.head.sha || github.ref }}

    - name: create tag
      run: |
          git config --global user.email "$(git log -n 1 --pretty=format:%ae)" && git config --global user.name "$(git log -n 1 --pretty=format:%an)"
          git tag v1.0.{{github.run_number}}
          git push --tags
        
   

    - name: Update Image Tag to Helm Repo
      run: |
          git config --global user.email "$(git log -n 1 --pretty=format:%ae)" && git config --global user.name "$(git log -n 1 --pretty=format:%an)"
          echo "cloning app repo"
          git clone https://oauth2:${{ secrets.MAVEN_LIB_TOKEN }}@github.com/${{ github.repository_owner }}/java-app-arogocd-deployment.git
          cd java-app-arogocd-deployment
          echo "checkout source branch"
          ls -al
          git checkout ${{ github.event.pull_request.head.ref }}
          echo "updating image tag in values file"
          ls -al
          sed -i "s,tag:.*,tag:\ ${{ steps.extract.outputs.version }}-${{ env.IMAGE_TAG_HASH }}," ./${{env.HELM-CHART-PATH}}/values.yaml
          git add . && git commit -m "update image tag"
          git push
        

    


    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
